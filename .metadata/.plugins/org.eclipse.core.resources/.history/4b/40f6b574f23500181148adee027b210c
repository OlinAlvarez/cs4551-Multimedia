/*******************************************************
 CS4551 Multimedia Software Systems
 @ Author: Olin-Mao Alvarez 
 *******************************************************/
import java.util.LinkedHashMap;
import java.util.Scanner;
import java.io.*;
import java.lang.Math;
import java.nio.charset.Charset;
public class CS4551_Alvarez{ static Scanner in = new Scanner(System.in);
public static void main(String[] args) throws IOException{

    int choice;
    do{
        choice = displayMenu();
        if(choice > 3 || choice < 0){
            System.out.println("error invalid choice!");
        }
        switch(choice){
            case 1: aliasing();
                break;
            case 2: dictionaryCoding();
                break;
            case 3: System.exit(0);
                break;
        }
    }while(choice != 3);
  }

  public static void usage(){
    System.out.println("\nUsage: java CS4551_Main [input_ppm_file]\n");
  }
  public static int displayMenu(){
    
    System.out.println("-------Main Menu-------");
    System.out.println("1. Aliasing");
    System.out.println("2. Dictionary Coding");
    System.out.println("3. Quit");
    return in.nextInt(); 
  }
  public static void resize(Image img) {
	  
  }
  public static void writeFile(String filename, StringBuilder fileContent, LinkedHashMap<String,Integer> dict, StringBuilder encoded, StringBuilder decoded,double ratio) throws IOException{
		File encodedText = new File("Dict-Coding-"+filename);
		FileWriter fw = new FileWriter(encodedText);
		BufferedWriter writer = new BufferedWriter(fw);
		
		writer.write(filename + "\n");
		
		writer.write("\n Original Content:");
		writer.write("\n--------------------\n");		
		writer.write(fileContent.toString());
		
		writer.write("\n\n--Dictionary Contents: \n\n");
		writer.write("Index-----Value \n");
		
		for(String s: dict.keySet()) {
			writer.write(" " + dict.get(s) + "\t   " + s + '\n');
		}
		
		writer.write("\n Encoded text:");
		writer.write("\n--------------------\n");		
		writer.write(encoded.toString());
		writer.write("\n Decoded text:");
		writer.write("\n--------------------\n");		
		writer.write(decoded.toString());
		
		writer.write("\n\n Compression ratio: " + ratio);
		writer.close();
		
		
		
		
  }
}