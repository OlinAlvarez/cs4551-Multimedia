/*******************************************************
 CS4551 Multimedia Software Systems
 @ Author: Olin-Mao Alvarez 
 *******************************************************/
import java.util.LinkedHashMap;
import java.util.Scanner;
import java.io.*;
import java.lang.Math;
import java.nio.charset.Charset;
public class CS4551_Alvarez{ static Scanner in = new Scanner(System.in);
public static void main(String[] args) throws IOException{
if(args.length != 1){
  usage();
  System.exit(1);
}
Image img = new Image(args[0]);

	if(img.getH() % 8 != 0  || img.getW() % 8 != 0) {
		resize(img);
	}
}

public static void usage(){
	System.out.println("\nUsage: java CS4551_Main [input_ppm_file]\n");
}
public static Image resize(Image img) {
	int width = img.getW();
	int height = img.getH();
	
	width += 8 - width % 8;
	height += 8 - height % 8;
	int[] black = {0,0,0};
	int[] pixelValue = new int[3];
	
	Image resizedImage =  new Image(width,height);
	
	for(int x = 0; x < width; x++) {
		for(int y = 0; y < height; y++) {
			if( x < img.getW() && y < img.getH()) {
				img.getPixel(x, y, pixelValue);
				resizedImage.setPixel(x, y, pixelValue);
			}else {
				resizedImage.setPixel(x, y, black);
			}
		}
	}
	resizedImage.display();
	return resizedImage;
}
public static void RGB2YCvCr(Image img) {
	float Y = 0;
	float Cb = 0;
	float Cr = 0;
	int[] rgb = new int[3];
	for(int x = 0; x < img.getW(); x++) {
		for(int y = 0; y < img.getH(); y++) {
			
		}
	}
}
public static void writeFile(String filename, StringBuilder fileContent, LinkedHashMap<String,Integer> dict, StringBuilder encoded, StringBuilder decoded,double ratio) throws IOException{
	File encodedText = new File("Dict-Coding-"+filename);
	FileWriter fw = new FileWriter(encodedText);
	BufferedWriter writer = new BufferedWriter(fw);
	
	writer.write(filename + "\n");
	
	writer.write("\n Original Content:");
	writer.write("\n--------------------\n");		
	writer.write(fileContent.toString());
	
	writer.write("\n\n--Dictionary Contents: \n\n");
	writer.write("Index-----Value \n");
	
	for(String s: dict.keySet()) {
		writer.write(" " + dict.get(s) + "\t   " + s + '\n');
	}
	
	writer.write("\n Encoded text:");
	writer.write("\n--------------------\n");		
	writer.write(encoded.toString());
	writer.write("\n Decoded text:");
	writer.write("\n--------------------\n");		
	writer.write(decoded.toString());
	
	writer.write("\n\n Compression ratio: " + ratio);
	writer.close();
	
	
	
	
}
}